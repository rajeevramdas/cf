AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation Sample Template For
  Creating the Cognito userpool, identity pool,client and user for use with kinesis datagenerator'
Parameters:
  yourEmail:
    Description: 'E-mail Id to be used to send the welcome e-mail to'
    Type: String

Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: kdg-user-pool
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: false
          Required: true

  UserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: kdgauth-client
      GenerateSecret: false
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows: 
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  IdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: kdg-auth-identity
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders: 
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  CognitoAuthorizedRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal: 
               Federated: "cognito-identity.amazonaws.com"
            Action: 
               - "sts:AssumeRoleWithWebIdentity"
      Policies:
        - PolicyName: "CognitoAuthorizedPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action:
                  - "mobileanalytics:PutEvents"
                  - "cognito-sync:*"
                  - "cognito-identity:*"
                  - ec2:DescribeRegions
                  - firehose:ListDeliveryStreams
                  - kinesis:ListStreams
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - kinesis:DescribeStream
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                Resource:
                  - arn:aws:kinesis:*:*:stream/*
              - Effect: "Allow"
                Action:
                  - firehose:DescribeDeliveryStream
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource:
                  - arn:aws:firehose:*:*:deliverystream/*

  
  # Assigns the roles to the Identity Pool
  IdentityPoolRoleMapping:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
         authenticated: !GetAtt CognitoAuthorizedRole.Arn

  CognitoUserPoolAdmin:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      Username: admin
      DesiredDeliveryMediums:
        - EMAIL
      UserPoolId:
        !Ref UserPool
      UserAttributes:
        - Name: email
          Value: !Ref 'yourEmail'

Outputs:
  CognitoUserPoolId:
    Description: The URL for your Kinesis Data Generator.
    Value: !Ref 'UserPool'
  KinesisDataGeneratorUrl:
    Description: The URL for your Kinesis Data Generator.
    Value: !Join
      - ''
      - - https://awslabs.github.io/amazon-kinesis-data-generator/web/producer.html?upid=
        - !Ref 'UserPool'
        - '&ipid='
        - !Ref 'IdentityPool'
        - '&cid='
        - !Ref 'UserPoolClient'
        - '&r='
        - !Ref "AWS::Region"
